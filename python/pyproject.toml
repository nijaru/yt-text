[project]
name = "yt-text"
version = "0.1.0"
description = "Download YouTube audio and convert it to text using yt-dlp and OpenAI Whisper"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    # Core dependencies that don't require compilation
    "yt-dlp>=2023.3.4",
    "psutil>=5.9.0",
    "beautifulsoup4>=4.12.2",
    "requests>=2.31.0",
    "lxml>=4.9.3",
    "python-dotenv>=1.0.0",
    "grpcio>=1.59.0",
    "grpcio-tools>=1.59.0",
    "protobuf>=4.21.6",
    "pydub>=0.25.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "ruff>=0.1.5",
]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "-v --cov=scripts"

[tool.coverage.run]
source = ["scripts"]
omit = ["scripts/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
# Common settings
target-version = "py39"
line-length = 100

# Linting settings
[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "S",   # flake8-bandit (security)
    "BLE", # flake8-blind-except
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "C90", # mccabe complexity
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "ERA", # flake8-eradicate
    "TRY", # tryceratops
]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "N802",  # Function name should be lowercase (conflicts with gRPC style)
    "S101",  # Use of assert detected
    "COM812", # Missing trailing comma in imports (conflicts with formatter)
]

# Sort imports
[tool.ruff.lint.isort]
known-first-party = ["scripts"]

# Configure flake8-quotes
[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

# Configure docstring style
[tool.ruff.lint.pydocstyle]
convention = "google"

# Formatting settings
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
