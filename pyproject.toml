[project]
name = "yt-text"
version = "2.0.0"
description = "Video to text transcription service using yt-dlp and Whisper"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Web framework
    "litestar[standard]>=2.13.0",
    "uvicorn[standard]>=0.32.0",
    # Database
    "sqlmodel>=0.0.22",
    "aiosqlite>=0.20.0",
    "alembic>=1.13.0",
    # Transcription
    "openai-whisper>=20231117", # Fallback/reference
    "yt-dlp>=2024.11.18",
    # Caching
    "diskcache>=5.6.0",
    # Utils
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",
    "python-multipart>=0.0.18",
    "httpx>=0.28.0",
    # Development platforms (optional)
    # mlx-whisper>=0.5.0  # For M3 Max dev (install separately)
    "mlx-whisper>=0.4.2",
    "greenlet>=3.2.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
    "ipython>=8.29.0",
]

test = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "faker>=33.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project.scripts]
transcribe = "src.cli:main"

[tool.ruff]
target-version = "py312"
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
    "RUF", # ruff specific
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]
