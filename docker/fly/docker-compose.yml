services:
  app:
    build:
      context: ../..
      dockerfile: docker/fly/Dockerfile
      args:
        GOMEMLIMIT: 1024MiB
        GOGC: 10
        GOMAXPROCS: 1
    image: yt-text:${TAG:-latest}
    environment:
      # Server Configuration
      - ENV=production
      - DEBUG=false
      - DB_PATH=/data/urls.db
      - SERVER_PORT=8080
      - READ_TIMEOUT=30s
      - WRITE_TIMEOUT=60s
      - IDLE_TIMEOUT=120s
      - TRANSCRIBE_TIMEOUT=60m
      - RATE_LIMIT=1
      - RATE_LIMIT_INTERVAL=10s

      # Model Configuration
      - WHISPER_MODEL=base.en

      # Python Environment
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - WHISPER_DOWNLOAD_ROOT=/tmp
      - PYTHONPATH=/app

      # Resource Management
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:32
      - MALLOC_ARENA_MAX=1
      - MALLOC_TRIM_THRESHOLD_=100000
      - MALLOC_MMAP_THRESHOLD_=100000
      - PYTHONMALLOC=malloc
      - GOMAXPROCS=1
      - GOGC=10
      - OOM_SCORE_ADJ=500

      # Middleware Configuration
      - MIDDLEWARE_ENABLE_RECOVER=true
      - MIDDLEWARE_ENABLE_REQUEST_ID=true
      - MIDDLEWARE_ENABLE_LOGGER=true
      - MIDDLEWARE_ENABLE_TIMEOUT=true
      - MIDDLEWARE_ENABLE_CORS=true
      - MIDDLEWARE_ENABLE_RATE_LIMIT=true
      - MIDDLEWARE_ENABLE_COMPRESS=true
      - MIDDLEWARE_ENABLE_ETAG=true
      - MIDDLEWARE_ENABLE_DEBUG_MODE=false
      - USE_GRPC=true
      - GRPC_SERVER_ADDRESS=localhost:50051

    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:size=1G,noexec
    volumes:
      - yt_text_data:/data
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1.8G
        reservations:
          cpus: "0.25"
          memory: 512M
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    networks:
      - yt_text_net

networks:
  yt_text_net:
    driver: bridge

volumes:
  yt_text_data:
